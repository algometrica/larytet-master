= Source Tree =

To get the source code you need 
<pre>
svn checkout http://larytet-master.googlecode.com/svn/trunk/JQuant JQuantGoogleCode
</pre>
where JQuantGoogleCode is a name of the folder in the local file system.

  * In the root [http://code.google.com/p/larytet-master/source/browse/#svn/trunk/JQuant JQuant/] you will find code responsible for the infrastructure - [http://code.google.com/p/larytet-master/source/browse/trunk/JQuant/Mailbox.cs Mailbox], Pool, [http://code.google.com/p/larytet-master/source/browse/trunk/JQuant/CyclicBuffer.cs CyclicBuffer], HTTP server support.
  * In the folder [http://code.google.com/p/larytet-master/source/browse/trunk/JQuant/#JQuant/FMR JQuant/FMR] there is a thin shell above TaskBarLib. Most of the calls to the FRM API are done here.
  * Folder [http://code.google.com/p/larytet-master/source/browse/trunk/JQuant/#JQuant/FMRSim JQuant/FMRSim] is an application which contains all CLI commands, class Main. Also TaskBarLib simulation is in this folder.

= Playback =

Playback is done by MaofDataGeneratorLogFile in the file [http://code.google.com/p/larytet-master/source/browse/trunk/JQuant/FMRSim/TaskBarLibSim.cs TaskBalibSim]. The object opens specified log file (currently only CVS format is supported), parses the fields, feeds the TaskBarSim. TaskBarSim generates the data feed and forwards to the application via FMR Stream API. 

The playback follows carefully the timestamps in the log file. Playback API supports arbitrary acceleration. Playback of one trading day takes about 10 minutes on the low end Windows machine.


= Example of the CLI session =
<pre>
$ FMRSim/bin/Debug/FMRSim.exe 
Running under Unix 2.6.31.21
JQuant - Main menu
=====================================
help, exit, one level up - .., main menu - ~

oper - Operations
dbg - System debug info
tst - Short tests
SIM:$ oper
JQuant - oper
=====================================
help, exit, one level up - .., main menu - ~

Login - Login to the remote server
Logout - Perform the logout process
StartLog - Log data stream - choose MF|RZ|MDD.
StopLog - Stop log - MF|MDD|RZ, to stop stream type Y
StopStream - Stop the data stream - MF | MDD | RZ
ShowLog - Show existing loggers
AS400TimeTest - Ping the server

SIM:$ login
SessionId is 1


0    10   20   30   40   50   60   70   80   90  100
|----+----+----+----+----+----+----+----+----+----|
..................................................
Connection opened for aryeh
sessionId=1
Login status is LoginSessionActive

SIM:$ startlog mf
Maof log file JQuantGoogle/DataLogs/MaofLog_9_5_2010_6_26_41_PM.csv
DT= Maof (0)
      Name Triggered    Logged   Dropped  Log type                  Latest                  Oldest   Stamped
-----------------------------------------------------------------------------------------------------------------------
MaofLogger         0         0         0       CSV    1/1/0001 12:00:00 AM    1/1/0001 12:00:00 AM     False

SIM:$ showlog
      Name Triggered    Logged   Dropped  Log type                  Latest                  Oldest   Stamped
-----------------------------------------------------------------------------------------------------------------------
MaofLogger     88129     88128         0       CSV     9/5/2010 6:26:47 PM     9/5/2010 6:26:41 PM     False

SIM:$ 
</pre>

= Example of test =
<pre>
SIM:$ tst
JQuant - tst
=====================================
help, exit, one level up - .., main menu - ~

GC - Run garbage collector
mbxTest - Run simple mailbox tests
mbxShow - Show mailboxes
threadTest - Run simple thread
threadShow - Show threads
poolTest - Run simple pool tests
poolShow - Show pools
timerTest - Run simple timer tests
timerShow - Show timers
threadPoolTest - Run simple thread pool tests
threadPoolShow - Show thread pools
cbtest - Cyclic buffer class test
rtclock - RT clock test
rtclock_1 - RT clock test
rtclock_2 - RT clock test
logTest - File logger test

SIM:$ mbxTest
TestMbx created
Mailbox.Send message sent
Mailbox.Send message received

    Name    Size MaxCoun Pending Timeout Receive    Sent Dropped
                       t                       d                
----------------------------------------------------------------
 TestMbx       2       1       0       0       1       1       0

SIM:$ threadPoolTest

    Name Threads    Jobs MinThre MaxJobs   Start    Done Running PlacedJ Pending Running FailedP FailedR
                         adsFree                         Threads     obs    Jobs    Jobs laceJob efreshQ
                                                                                                    ueue
--------------------------------------------------------------------------------------------------------
    test       1       5       0       2       5       5       0       5       0       0       0       4
ThreadPoolJob done  idx =0, time = 15 micros
ThreadPoolJob done  idx =1, time = 17 micros
ThreadPoolJob done  idx =2, time = 1074 micros
ThreadPoolJob done  idx =3, time = 2133 micros
ThreadPoolJob done  idx =4, time = 3192 micros

SIM:$ ThreadPool test destroyed

SIM:$ ..
JQuant - Main menu
=====================================
help, exit, one level up - .., main menu - ~

oper - Operations
dbg - System debug info
tst - Short tests

SIM:$ exit

</pre>

= Example of HTTP =
<pre>{{{$ FMRSim/bin/Debug/FMRSim.exe 
Running under Unix 2.6.31.21
JQuant - Main menu
=====================================
help, exit, one level up - .., main menu - ~

oper - Operations
dbg - System debug info
box - Box arb algo
tst - Short tests
SIM:$ dbg
JQuant - dbg
=====================================
help, exit, one level up - .., main menu - ~

OFSM - Test RZ Orders FSM
dbgUF - Test vatious UserClass functions
OrderStream - Test orders Stream
http - HTTP server
sh161 - Get TA25 Index weights
AS400TimeTest - ping the server
fmrPing - Start FMR ping thread
threadPoolShow - Show thread pools
timerShow - Show timers
threadShow - Show threads
mbxShow - Show mailboxes
poolShow - Show pools
loggerTest - Run simple test of the logger
loggerShow - Show existing loggers
prodShow - Show producers
veriShow - Show data verifiers

SIM:$ http
JQuant - http
=====================================
help, exit, one level up - .., main menu - ~

start - Start HTTP server
stop - Stop HTTP server
stat - Show HTTP server traffic counters

SIM:$ start
HTTP server started on port 8183

SIM:$ stat
 Connect ConnPos jobsPla BytesIn BytesOu   Files NotFoun HttpReq HttpReq
    ions   tpone     ced               t               d   uests uestNot
                                                                   Found
------------------------------------------------------------------------
       0       0       0       0       0       0       0       0       0

SIM:$ stat
 Connect ConnPos jobsPla BytesIn BytesOu   Files NotFoun HttpReq HttpReq
    ions   tpone     ced               t               d   uests uestNot
                                                                   Found
------------------------------------------------------------------------
       6       0       6    3110    1889       1       0       5       0

SIM:$ stat
 Connect ConnPos jobsPla BytesIn BytesOu   Files NotFoun HttpReq HttpReq
    ions   tpone     ced               t               d   uests uestNot
                                                                   Found
------------------------------------------------------------------------
       9       0       9    4729    3139       1       0       8       0

SIM:$ }}}</pre>